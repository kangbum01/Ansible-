---
##############################
# Play 01 - 웹 서버 구축
# 1) 패키지 설치 - httpd, mod_ssl, firewalld, python3-PyMySQL
# 2) 서비스 설정 - /var/www/html/index.html
# 3) 서비스 기동 - httpd, firewalld
# 4) 방화벽에 등록 - http, https
# Play 02 - 웹 요청 확인
# 1) 웹 요청 - http://192.168.10.11/
# 2) 웹 출력 확인
##############################
- name: Play 01 - 웹 서버 구축
  hosts: webserver
  vars:
   pkg_http_web: httpd
   pkg_https_web: mod_ssl
   pkg_fw: firewalld
   pkg_python: python3-PyMySQL
   basedir: /var/www/html
   indexfile: "{{ basedir }}/index.html"
   svc_web: httpd
   svc_fw: firewalld
   fw_80: http
   fw_8080: https
  tasks:
   - name: 1) 패키지 설치 - {{ pkg_http_web }}, {{ pkg_https_web }}, {{ pkg_fw }}, {{ pkg_python }}
     ansible.builtin.dnf:
      name:
       - "{{ pkg_http_web }}"
       - "{{ pkg_https_web }}"
       - "{{ pkg_fw }}"
       - "{{ pkg_python }}"
      state: present
   - name: 2) 서비스 설정 - {{ indexfile }}
     ansible.builtin.copy:
      content: 'Test Web Page\n'
      dest: "{{ indexfile }}"
      mode: '0644'
   - name: 3) 서비스 기동 - {{ svc_web }}, {{ svc_fw }}
     ansible.builtin.systemd:
      name: "{{ item }}"
      state: started
      enabled: true
     loop:
      - "{{ svc_web }}"
      - "{{ svc_fw }}"
   - name: 4) 방화벽에 등록 - {{ fw_80 }}, {{ fw_8080 }}
     ansible.posix.firewalld:
      service: "{{ item }}"
      permanent: true
      immediate: true
      state: enabled
     loop:
      - "{{ fw_80 }}"
      - "{{ fw_8080 }}"


- name: Play 02 - 웹 요청 확인
  hosts: localhost
  become: false
  vars:
   url: "http://192.168.10.11/"
  tasks:
    - name: 1) 웹 요청 - {{ url }}
      ansible.builtin.uri:
       url: "{{ url }}"
       status_code:
        - 200
      register: output
    - debug: var=output['msg']

